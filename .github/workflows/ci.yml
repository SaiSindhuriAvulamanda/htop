name: CI

on: [ push ]

env:
  # Enable format attributes in ncurses headers
  # Enable fortified memory/string handling
  CPPFLAGS: -DGCC_PRINTF -DGCC_SCANF -D_FORTIFY_SOURCE=2

jobs:
  build-ubuntu-arch-matrix-full-featured-gcc:
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: s390x
            distro: ubuntu22.04
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-qemu-action@v3
      with:
          platforms: s390x
    - uses: docker/setup-buildx-action@v3
    - run: |
          docker pull --platform linux/s390x ubuntu
          docker run -dit --name s390x_container --platform linux/s390x ubuntu bash
          docker ps
    - uses: uraimo/run-on-arch-action@v3
      name: Configure and Build
      id: arch-matrix-gcc
      with:
        arch: ${{ matrix.arch }}
        distro: ${{ matrix.distro }}
        githubToken: ${{ github.token }}
        shell: /bin/bash
        install: |
          apt-get -q -y update
        env: |
          CPPFLAGS: -DGCC_PRINTF -DGCC_SCANF -D_FORTIFY_SOURCE=2
          CFLAGS: -O3 -g -flto
          LDFLAGS: -O3 -g -flto
        run: |
          uname -a
          echo ::set-output name=uname::$(uname -a)
    - name: Install Dependencies
      run: |
          docker exec s390x_container bash -c "uname -a"
          docker exec s390x_container bash -c "sudo apt-get install -q -y libncursesw5-dev libhwloc-dev libnl-3-dev libnl-genl-3-dev libsensors4-dev libcap-dev make pkg-config"
    - name: Bootstrap
      run: docker exec ${{ steps.setup.outputs.container }} ./autogen.sh
    - name: Configure
      run: docker exec ${{ steps.setup.outputs.container }} ./configure --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-setuid --enable-delayacct --with-sensors --with-capabilities
    - name: Build
      run: |
          docker exec ${{ steps.setup.outputs.container }} make -k
          docker exec ${{ steps.setup.outputs.container }} make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --enable-hwloc --enable-setuid --enable-delayacct --with-sensors --with-capabilities'
          
  lint-whitespace:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: check-whitespaces
        run: git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

  lint-pcp-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: check-pcp-style
        run: ./check-pcp-style.sh
